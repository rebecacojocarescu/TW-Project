CREATE TABLE users (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(100) NOT NULL,
    surname VARCHAR2(100) NOT NULL,
    email VARCHAR2(150) NOT NULL UNIQUE,
    password VARCHAR2(255) NOT NULL,
    location VARCHAR2(255),
    is_family NUMBER(1) DEFAULT 0, -- 0 = false, 1 = true
    latitude NUMBER(10, 8),
    longitude NUMBER(11, 8),
    rol VARCHAR2(50)
);

CREATE TABLE pets (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(100) NOT NULL,
    species VARCHAR2(50) NOT NULL,
    breed VARCHAR2(100),
    age NUMBER(3), -- vârsta poate fi de maxim 999 ani
    gender VARCHAR2(10), -- "Male", "Female"
    health_status VARCHAR2(100),
    description VARCHAR2(1000),
    available_for_adoption NUMBER(1) DEFAULT 0, -- 0 = false, 1 = true
    adoption_address VARCHAR2(255),
    owner_id NUMBER, -- ID-ul stăpânului (FK către tabela users)
    latitude NUMBER(10, 8),
    longitude NUMBER(11, 8),
    CONSTRAINT fk_pets_to_users FOREIGN KEY (owner_id) REFERENCES users(id)
);

CREATE TABLE adoptions (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pet_id NUMBER, -- referință la tabela pets
    adopter_id NUMBER, -- referință la tabela users
    adoption_date DATE DEFAULT SYSDATE,
    status VARCHAR2(10) CHECK (status IN ('pending', 'approved', 'rejection')),
    CONSTRAINT fk_adopted_pet FOREIGN KEY (pet_id) REFERENCES pets(id),
    CONSTRAINT fk_adopter FOREIGN KEY (adopter_id) REFERENCES users(id)
);

CREATE TABLE feeding_schedule (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pet_id NUMBER, -- referință la tabela pets
    time TIMESTAMP DEFAULT SYSDATE, -- ora programării mesei
    food_description VARCHAR2(255), -- descrierea alimentului
    frequency VARCHAR2(10) CHECK (frequency IN ('Daily', 'Weekly', 'Occasional')),
    CONSTRAINT fk_feeding_schedule FOREIGN KEY (pet_id) REFERENCES pets(id)
);

CREATE TABLE restrictions (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pet_id NUMBER, -- referință la tabela pets
    description VARCHAR2(1000), -- descrierea restricției
    CONSTRAINT fk_restrictions FOREIGN KEY (pet_id) REFERENCES pets(id)
);

CREATE TABLE media (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pet_id NUMBER, -- referință la tabela pets
    type VARCHAR2(10) CHECK (type IN ('photo', 'video')),
    url VARCHAR2(255), -- adresa URL a fișierului media
    upload_date DATE DEFAULT SYSDATE, -- data încărcării fișierului media
    CONSTRAINT fk_media FOREIGN KEY (pet_id) REFERENCES pets(id)
);

CREATE TABLE medical_history (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pet_id NUMBER, -- referință la tabela pets
    record_date DATE DEFAULT SYSDATE, -- data înregistrării istoricului medical
    description VARCHAR2(1000), -- descrierea istoricului medical
    first_aid_method VARCHAR2(255), -- metoda de prim ajutor aplicată
    CONSTRAINT fk_medical_history FOREIGN KEY (pet_id) REFERENCES pets(id)
);

CREATE TABLE rss_feed (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title VARCHAR2(255) NOT NULL, -- titlul postării RSS
    content VARCHAR2(4000), -- conținutul postării RSS
    date_posted DATE DEFAULT SYSDATE, -- data postării RSS
    pet_id NUMBER, -- referință la tabela pets
    location VARCHAR2(255), -- locația unde se întâmplă evenimentul
    popularity_score NUMBER(3, 2), -- scorul de popularitate (de exemplu, între 0 și 10.00)
    is_general_news NUMBER(1) DEFAULT 0, -- 0 = nu este știre generală, 1 = este știre generală
    CONSTRAINT fk_rss_feed FOREIGN KEY (pet_id) REFERENCES pets(id)
);


SELECT * FROM system.users;

CREATE TABLE adoption_form (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id NUMBER NOT NULL, -- referință la tabela users (userul care adopta)
    pet_id NUMBER NOT NULL, -- referință la tabela pets (animalul de adoptat)
    
    -- Informații personale
    first_name VARCHAR2(100) NOT NULL,
    last_name VARCHAR2(100) NOT NULL,
    email VARCHAR2(150) NOT NULL,
    phone VARCHAR2(20) NOT NULL,
    
    -- Adresă
    street_address VARCHAR2(255) NOT NULL,
    city VARCHAR2(100) NOT NULL,
    country VARCHAR2(100) NOT NULL,
    postal_code VARCHAR2(20) NOT NULL,
    
    -- Numele animalului pe care dorește să-l adopte
    pet_name_desired VARCHAR2(100) NOT NULL,
    
    -- Întrebări despre locuință
    has_yard NUMBER(1) DEFAULT 0, -- 0 = nu, 1 = da
    housing_status VARCHAR2(10) CHECK (housing_status IN ('own', 'rent')) NOT NULL,
    has_pet_permission NUMBER(1) DEFAULT 0, -- 0 = nu, 1 = da (relevant doar dacă închiriază)
    
    -- Întrebări despre familie
    has_children NUMBER(1) DEFAULT 0, -- 0 = nu, 1 = da
    children_ages VARCHAR2(255), -- vârstele copiilor (text liber pentru flexibilitate)
    
    -- Întrebări despre alte animale
    has_other_pets NUMBER(1) DEFAULT 0, -- 0 = nu, 1 = da
    other_pets_description VARCHAR2(500), -- ce animale și câte
    
    -- Întrebări despre îngrijire
    hours_alone_per_day NUMBER(2), -- câte ore pe zi va fi singur animalul
    reason_for_alone_time VARCHAR2(500), -- motivul pentru care va fi singur
    
    -- Motivația pentru adopție
    adoption_reason VARCHAR2(1000) NOT NULL, -- de ce dorește să adopte acest animal
    
    -- Metadata
    form_submitted_date DATE DEFAULT SYSDATE,
    status VARCHAR2(20) DEFAULT 'submitted' CHECK (status IN ('submitted', 'under_review', 'approved', 'rejected')),
    
    -- Chei străine
    CONSTRAINT fk_adoption_form_user FOREIGN KEY (user_id) REFERENCES users(id),
    CONSTRAINT fk_adoption_form_pet FOREIGN KEY (pet_id) REFERENCES pets(id)
);
